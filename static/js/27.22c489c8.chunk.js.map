{"version":3,"file":"static/js/27.22c489c8.chunk.js","mappings":"oMAsBMA,GAAmBC,EAAAA,EAAAA,OAAK,kBAAM,2BAAgC,IA+GpE,UAlGoB,WAAO,IAADC,EAAAC,EAIlBC,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,YAAYA,WAAW,IAChEG,GAAYF,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,YAAYG,SAAS,IAC5DC,GAAQH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,YAAYI,KAAK,IAEpDC,GAAWC,EAAAA,EAAAA,MAETC,GAAWC,EAAAA,EAAAA,MAAXD,OACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAA2B,QAArBd,EAAe,QAAfC,EAACU,EAASP,aAAK,IAAAH,OAAA,EAAdA,EAAgBc,YAAI,IAAAf,EAAAA,EAAI,KAyBpD,OAvBAgB,EAAAA,EAAAA,YAAU,WACHP,GACLF,GAASU,EAAAA,EAAAA,GAAmBR,GAmB9B,GAAG,CAACA,EAAQF,KAGVW,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBAcJC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAIT,EAAaU,QAAQJ,SAAC,YACrB,OAAVb,IAAkBc,EAAAA,EAAAA,KAAA,KAAGI,UAAU,UAASL,SAAC,kBACzCd,IACCe,EAAAA,EAAAA,KAACK,EAAAA,GAAY,CACXC,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,KAIA,OAAhB9B,IACCgB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,eAAcL,SAAA,EAC3BD,EAAAA,EAAAA,MAAA,MAAIM,UAAU,qBAAoBL,SAAA,CAAC,UAAQjB,EAAY+B,UACvDf,EAAAA,EAAAA,MAAA,KAAGM,UAAU,kBAAiBL,SAAA,CAAC,OAAKjB,EAAYgC,OAChDhB,EAAAA,EAAAA,MAAA,KAAGM,UAAU,oBAAmBL,SAAA,CAAC,IAAEjB,EAAYiC,SAC/Cf,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACgB,EAAAA,GAAO,CAACd,GAAG,WAAUH,SAAC,mBAI7BC,EAAAA,EAAAA,KAACiB,EAAAA,SAAQ,CACPC,UACElB,EAAAA,EAAAA,KAACK,EAAAA,GAAY,CACXC,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,KAEhBb,UAEDC,EAAAA,EAAAA,KAACmB,EAAAA,GAAM,CAAApB,UACLC,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CAACC,KAAK,WAAWC,SAAStB,EAAAA,EAAAA,KAACtB,EAAgB,YAK3D,C","sources":["pages/PostDetails.jsx"],"sourcesContent":["import React, { Suspense, lazy, useEffect, useRef } from 'react';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  NavLink,\n  useParams,\n  Routes,\n  Route,\n  useLocation,\n  Link,\n} from 'react-router-dom';\n// import { toast } from 'react-toastify';\nimport {\n  // decrementCountValue,\n  fetchPostDataThunk,\n  // incrementCountValue,\n  // setError,\n  // setIsLoading,\n  // setPostDetails,\n} from '../redux/postDetailsReducer';\n// import { fetchDetails } from 'services/api';\n\nconst CommentsPostPage = lazy(() => import('pages/CommentsPostPage'));\n\n// const toastConfig = {\n//   position: 'top-right',\n//   autoClose: 5000,\n//   hideProgressBar: false,\n//   closeOnClick: true,\n//   pauseOnHover: true,\n//   draggable: true,\n//   progress: undefined,\n//   theme: 'dark',\n// };\n\nconst PostDetails = () => {\n  // const [postDetails, setPostDetails] = useState(null);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  const postDetails = useSelector(state => state.postDetails.postDetails);\n  const isLoading = useSelector(state => state.postDetails.isLoading);\n  const error = useSelector(state => state.postDetails.error);\n  // const countValue = useSelector(state => state.postDetails.countValue);\n  const dispatch = useDispatch();\n\n  const { postId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!postId) return;\n    dispatch(fetchPostDataThunk(postId));\n\n    // const fetchPostData = async () => {\n    //   try {\n    //     dispatch(setIsLoading(true));\n\n    //     const postData = await fetchDetails(postId);\n    //     dispatch(setPostDetails(postData));\n\n    //     toast.success('Post details were successfully fetched!', toastConfig);\n    //   } catch (error) {\n    //     dispatch(setError(error.message));\n\n    //     toast.error(error.message, toastConfig);\n    //   } finally {\n    //     dispatch(setIsLoading(false));\n    //   }\n    // };\n    // fetchPostData();\n  }, [postId, dispatch]);\n\n  return (\n    <div>\n      <h1>Post Details</h1>\n      {/* <div className=\"count\">{countValue}</div> */}\n      {/* <button\n        className=\"button-plus\"\n        onClick={() => dispatch(incrementCountValue())}\n      >\n        +\n      </button> */}\n      {/* <button\n        className=\"button-plus\"\n        onClick={() => dispatch(decrementCountValue())}\n      >\n        -\n      </button> */}\n      <Link to={backLinkHref.current}>Go back</Link>\n      {error !== null && <p className=\"c-error\"> Oops, error.</p>}\n      {isLoading && (\n        <ThreeCircles\n          visible={true}\n          height=\"100\"\n          width=\"100\"\n          color=\"#04e4f9\"\n          ariaLabel=\"three-circles-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n        />\n      )}\n\n      {postDetails !== null && (\n        <div className=\"post-details\">\n          <h2 className=\"post_details-title\">Title: {postDetails.title}</h2>\n          <p className=\"post_details-id\">ID: {postDetails.id}</p>\n          <p className=\"post_details-body\"> {postDetails.body}</p>\n          <div>\n            <NavLink to=\"comments\">Comments</NavLink>\n          </div>\n        </div>\n      )}\n      <Suspense\n        fallback={\n          <ThreeCircles\n            visible={true}\n            height=\"100\"\n            width=\"100\"\n            color=\"#04e4f9\"\n            ariaLabel=\"three-circles-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n          />\n        }\n      >\n        <Routes>\n          <Route path=\"comments\" element={<CommentsPostPage />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default PostDetails;\n"],"names":["CommentsPostPage","lazy","_location$state$from","_location$state","postDetails","useSelector","state","isLoading","error","dispatch","useDispatch","postId","useParams","location","useLocation","backLinkHref","useRef","from","useEffect","fetchPostDataThunk","_jsxs","children","_jsx","Link","to","current","className","ThreeCircles","visible","height","width","color","ariaLabel","wrapperStyle","wrapperClass","title","id","body","NavLink","Suspense","fallback","Routes","Route","path","element"],"sourceRoot":""}